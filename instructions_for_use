
## Be aware that running all scripts from scratch will take many days, especially for downloading PDB structure, calculating interfaces for >1000 structures, and submitting jobs to BindProfX or Foldx.

## All scripts run in Python 3, except for produce_ppi_models.py and produce_protein_models.py which run in Python 2. Install all python modules listed in the file “dependencies” before running the instructions below.

## All scripts are set to do calculations on the HI-II-14 dataset (and its corresponding structural interactome Y2H-SI). To repeat calculations on the IntAct dataset (and its corresponding structural interactome IntAct-SI), set the parameter “interactome_name” in all scripts to the value “IntAct”. Some plotting scripts may require that calculations for all 3 interactomes (Y2H-SI, IntAct-SI, and experiment) be done first.

## To reproduce all data files and results from scratch, set your working directory to your project directory “edgotype_fitness_effect”, and follow the following instructions:

mkdir data
cd data
mkdir external
cd external

# download and unzip UniProt human reference sequences:
wget ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/reference_proteomes//Eukaryota/UP000005640_9606.fasta.gz
gunzip UP000005640_9606.fasta.gz

# download and unzip UniProt ID mapping table:
wget ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/idmapping//by_organism/HUMAN_9606_idmapping.dat.gz
gunzip HUMAN_9606_idmapping.dat.gz

# download UniProt reviewed human proteome list:
wget 'http://www.uniprot.org/uniprot/?sort=&desc=&compress=no&query=&fil=reviewed:yes%20AND%20organism:%22Homo%20sapiens%20(Human)%20[9606]%22%20AND%20proteome:up000005640&format=list&force=yes' -O uniprot_reviewed_human_proteome.list

# download RefSeqGene mapping:
wget ftp://ftp.ncbi.nlm.nih.gov/refseq/H_sapiens/RefSeqGene/LRG_RefSeqGene

# download and unzip PDB sequences and structures residue labels:
wget ftp://ftp.wwpdb.org/pub/pdb/derived_data/pdb_seqres.txt
wget https://cdn.rcsb.org/etl/kabschSander/ss_dis.txt.gz
gunzip ss_dis.txt.gz

# download HI-II-14 human protein-protein interaction dataset:
wget http://interactome.dfci.harvard.edu/H_sapiens/download/HI-II-14.tsv

# download and extract IntAct protein-protein interaction dataset:
wget ftp://ftp.ebi.ac.uk/pub/databases/intact/current/psimitab/intact.zip
unzip intact.zip
rm intact.zip intact_negative.txt

# downlaod experimental edgotype dataset of Sahni et al. (2015):
wget https://ars.els-cdn.com/content/image/1-s2.0-S0092867415004304-mmc3.xlsx -O Sahni_2015_Table_S3.xlsx

# process data files from external sources:
cd ../../code
python3 process_external_data.py

# process reference interactive dataset
python3 process_interactome.py

cd ../data/processed
# BLAST human protein sequences against PDB SEQRES sequences:
makeblastdb -in pdb_seqres_reduced.fasta -dbtype prot -out pdb_seqres_db
blastp -db pdb_seqres_db -query human_reference_sequences.fasta -out human_pdb_e-5 -evalue 1e-5

# produce template structural interactome:
cd ../../code
python3 produce_template_structural_interactome.py

# download, unzip and process RefSeq protein transcript sequence files:
cd ../data/external
mkdir RefSeq
cd RefSeq
wget ftp://ftp.ncbi.nlm.nih.gov/refseq//H_sapiens/mRNA_Prot/human.*.protein.faa.gz
gunzip human.*.protein.faa.gz
cd ../../../code
python3 process_refseq_files.py

# download, unzip and process disease-causing mutations from ClinVar:
cd ../data/external
wget ftp://ftp.ncbi.nlm.nih.gov/pub/clinvar//tab_delimited/variant_summary.txt.gz
gunzip variant_summary.txt.gz
cd ../../code
python3 process_clinvar_mutations.py

# download, unzip and process dbSNP flatfiles:
cd ../data/external
mkdir dbsnp
cd dbsnp
# For <i> in [1-22,X,Y] run the following 7 command lines to process dbSNP files:
	1 - wget ftp://ftp.ncbi.nih.gov/snp//organisms/human_9606_b150_GRCh38p7/ASN1_flat/ds_flat_ch<i>.flat.gz
	2 - gunzip ds_flat_ch<i>.flat.gz
	3 - cd ../../../code
	4 - # set parameter ‘chr’ in script process_dbsnp_flatfile.py to <i> in string format
	5 - python3 process_dbsnp_flatfile.py
	6 - rm ds_flat_ch<i>.flat (# optionally to clear memory)
	7 - cd ../data/external/dbsnp

# filter and process common non-disease mutations from dbSNP flatfiles:
cd ../../../code
python3 process_dbsnp_mutations.py

# produce PPI template files for PPI homology modelling
python3 produce_ppi_template_files.py

# produce PPI alignment files for PPI homology modelling
python3 produce_ppi_alignment_files.py

# produce PPI structural models
cd ../data/processed/<interactome_name>/model_based
mkdir ppi_models
cd ppi_models
python2 ../../../../../code/produce_ppi_models.py

# rename structural model files
cd ../../../../../code
python3 rename_models.py

# produce structural interactome
python3 produce_model_structural_interactome.py

# predict PPI edgetic perturbations and edgetic mutations based on geometry:
python3 predict_edgetic_mutations_geometry.py

# produce edgetic mutation structure maps for submission to FoldX:
python3 produce_edgetic_mutation_structure_maps.py

#Submit mutation structure maps to FoldX for ∆∆G calculations following instructions in file ‘instructions_for_FoldX’

# Analyze binding ∆∆G upon mutation
python3 analyze_binding_ddg.py

# predict PPI edgetic perturbations and edgetic mutations based on physics (∆∆G):
python3 predict_edgetic_mutations_physics.py

